---
title: "Data Structures and Algorithms"
subtitle: "Week 01 - Introduction"
author: "Thenuwan Jayasinghe"
format:
  revealjs:
    slide-number: true
    logo: ../data/logo/blue_green.png
    footer: "&copy; Boffin Institute of Data Science"
    css: ../css/custom.css
title-slide-attributes:
  data-background-color: "#001f3f"
---

## Welcome! üöÄ

::: {.incremental}

* Let's begin our journey into the world of programming's core principles.
* **Goal:** Understand what Data Structures and Algorithms are and why they are essential.

:::

---

## What is a Data Structure? üìö

::: {.incremental}

* A way of **organizing and storing data**.
* It's all about making data access and modification **efficient**.

* **Real-world Example 1:** A contact list on your phone.
    * Data (names, numbers) is stored in an organized, alphabetical list.
    * This structure makes it fast to find a specific person.
:::

--- 

## What is a Data Structure? üìö

::: {.incremental}

* **Real-world Example 2:** A library's catalog system.
    * Books (data) are organized by categories, authors, and titles.
    * This structure allows students to quickly locate a specific book without searching every shelf.

:::

---

## What is an Algorithm? üìú

::: {.incremental}

* A step-by-step set of **instructions** to solve a problem.
* The "how-to" for a specific task.

:::

---

## What is an Algorithm? üÉè

::: {.incremental}
* **Real-world Example:** Sorting a deck of playing cards.
    * You have a shuffled deck (the data) that needs to be put in order (e.g., by suit and then by rank).
    * Your algorithm might be: "Take one card, find its correct position in the sorted piles, and place it there. Repeat until all cards are in order."
    * By following these precise steps (the algorithm), you transform the shuffled deck into an organized one (the solution).

:::


---

## Our 15-Week Journey üó∫Ô∏è

We'll travel through five key areas on our map.

::: {.incremental}

* **Part 1:** The Basic Ways to Organize Data
* **Part 2:** Flexible Connected Data
* **Part 3:** Branching Data Structures
* **Part 4:** Essential Problem-Solving Steps
* **Part 5:** Networks and Looking Back

:::

---

### Part 1: The Basic Ways to Organize Data (Weeks 1-5)

We start with the absolute essentials of how computers store information.

::: {.incremental}
* **Arrays & Lists:** Think of these as digital "egg cartons" or organized "shopping lists" where each item has a specific spot.
* **Stacks:** Imagine a stack of plates. You always put a new plate on top, and you always take the top plate off first. We'll see how this works just like your browser's "back" button.
:::

---

### Part 1: The Basic Ways to Organize Data (Weeks 1-5)

::: {.incremental}
* **Queues:** Picture a line at the canteen. The first person to join the line is the first person to get served.
* **Measuring Speed:** We'll learn how to tell if our computer instructions are super fast or if they might take a long time, especially when dealing with lots of information.
:::

---

### Part 2: Flexible Connected Data (Weeks 6-7)

What if our data containers need to be more adaptable and grow easily?

::: {.incremental}
* **Linked Lists:** Think of a toy train set! Each train car is a piece of data, and it's linked directly to the car in front of and behind it. You can easily add a new car anywhere in the train or remove a car, and the train just connects up again without having to rebuild the whole thing from the start.
:::

---

### Part 3: Branching Data Structures (Weeks 8-10)

Sometimes, data isn't in a simple line; it branches out like a tree.

::: {.incremental}
* **Trees:** Think of a family tree, where information branches from parents to children, or how files are organized into folders on your computer. We'll learn how to manage data that's organized this way.
* **Special Trees for Quick Finds:** We'll look at types of trees that help us find information incredibly fast, like playing a "guess the number" game where you quickly narrow down possibilities.
:::

---

### Part 3: Branching Data Structures (Weeks 8-10)

::: {.incremental}
* **Python Dictionaries:** These are amazing for finding information instantly! Imagine looking up a friend's phone number in a phonebook just by knowing their name ‚Äì no need to read through every single entry.
:::

---

### Part 4: Essential Problem-Solving Steps (Weeks 11-13)

Once we know how to organize our data, we can learn powerful ways to work with it.

::: {.incremental}
* **Finding Information:** We'll explore different systematic ways to search for specific items within our organized data.
* **Putting Things in Order:** How do we sort things? We'll start with simple, hands-on methods (like sorting playing cards) and then move to highly efficient strategies that computers use to sort massive amounts of information very quickly.
:::

---

### Part 5: Networks and Looking Back (Weeks 14-15)

We'll look at a powerful structure that helps us understand connections, and then review everything.

::: {.incremental}
* **Graphs:** This is a super versatile way to represent things that are connected, like friends on social media, roads on a map, or even how websites link to each other on the internet.
* **Week 15:** A full course review to bring all the concepts together and get you ready for the final assessment.
:::

---

## How You'll Be Assessed

Your final grade is a measure of your continuous effort and final understanding.

* **Continuous Assessment (CA): 40%**
    * This includes assignments, quizzes, and group presentations throughout the semester.

* **Summative Assessment (SA): 60%**
    * A final examination paper at the end of the semester.

---



## {.center #logo-end-slide data-background-color="#001f3f"}

![](../data/logo/blue_green.png)

Boffin Institute of Data Science

thenuwanj@boffin.lk